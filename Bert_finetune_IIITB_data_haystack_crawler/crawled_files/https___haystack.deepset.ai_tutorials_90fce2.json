{"content": "div#hs-eu-cookie-confirmation{background:#fff;height:auto;left:0;position:absolute;top:0;width:100%;z-index:100000000!important;border-bottom:1px solid #cbd6e2;border-top:1px solid #cbd6e2;box-shadow:0 1px 5px #eaf0f6;color:#33475b;font-family:inherit;font-size:inherit;font-weight:400!important;line-height:inherit;text-align:left;text-shadow:none!important;font-size:12px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;line-height:18px}div#hs-eu-cookie-confirmation.hs-cookie-notification-position-bottom{position:fixed;border-bottom:0;bottom:0;top:auto;box-shadow:0 -1px 3px #eaf0f6}div#hs-eu-cookie-confirmation *{box-sizing:border-box!important}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner{background:#fff;margin:0 auto;max-width:1000px;padding:20px}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a{text-decoration:none!important}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a,div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a:hover{background:none!important;border:none!important;box-shadow:none!important;color:#0091ae;font-family:inherit;font-size:inherit;font-weight:400!important;line-height:inherit;text-align:left;text-shadow:none!important}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a:hover{text-decoration:underline!important}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner div#hs-eu-policy-wording{margin-bottom:12px}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner div#hs-en-cookie-confirmation-buttons-area,div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner div#hs-eu-cookie-confirmation-button-group{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner div#hs-en-cookie-confirmation-buttons-area{margin-right:72px;justify-content:flex-end;align-items:center}@media (max-width:800px){div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner div#hs-en-cookie-confirmation-buttons-area{justify-content:center;margin-right:0}}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner div#hs-eu-cookie-confirmation-button-group{justify-content:center}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a#hs-eu-confirmation-button,div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a#hs-eu-cookie-settings-button,div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a#hs-eu-decline-button{margin:6px!important}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a#hs-eu-confirmation-button,div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a#hs-eu-decline-button{border-radius:3px;display:inline-block;padding:10px 16px!important;text-decoration:none!important}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a#hs-eu-confirmation-button{background-color:#425b76!important;border:1px solid #425b76!important;color:#fff;font-family:inherit;font-size:inherit;font-weight:400!important;line-height:inherit;text-align:left;text-shadow:none!important}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a#hs-eu-decline-button{border:1px solid #425b76!important;color:#425b76;font-family:inherit;font-size:inherit;font-weight:400!important;line-height:inherit;text-align:left;text-shadow:none!important}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a#hs-eu-cookie-settings-button{color:#425b76!important}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner p{margin:0 72px 12px;color:#33475b;font-family:inherit;font-size:inherit;font-weight:400!important;line-height:inherit;text-align:left;text-shadow:none!important}@media (max-width:800px){div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner p{margin:0 20px 12px}}#hs-eu-close-button-container{display:flex;justify-content:end;margin-top:8px;margin-right:8px}#hs-eu-close-button-container a#hs-eu-close-button[role=button]{float:right;width:1.5rem;font-size:40px!important;text-align:center!important;cursor:pointer;color:#8b8589!important}#hs-eu-close-button-container a#hs-eu-close-button[role=button]:hover{background:none!important;border:none!important;box-shadow:none!important;color:#0091ae;font-family:inherit;font-size:inherit;font-weight:400!important;line-height:inherit;text-align:left;text-shadow:none!important;text-decoration:none!important}@media (max-width:800px){#hs-eu-close-button-container a#hs-eu-close-button[role=button]{margin-right:10px;font-size:30px;line-height:50px}}@media (min-width:800px){#hs-eu-close-button-container a#hs-eu-close-button[role=button]{margin-bottom:10px}}@media print{div#hs-eu-cookie-confirmation{display:none!important}}@media screen and (max-width:480px){div#hs-eu-cookie-confirmation{font-size:12px!important}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner{padding:8px 14px 14px!important}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a,div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner a#hs-eu-confirmation-button{font-size:12px!important}div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner p{font-size:12px!important;margin-bottom:12px!important;line-height:15px!important}}@media only screen and (min-width:960px){div#hs-eu-cookie-confirmation{position:fixed}}\n            \n              \n              This website stores cookies on your computer. These cookies are used to improve your website experience and provide more personalized services to you, both on this website and through other media. To find out more about the cookies we use, see our Privacy Policy.\n              We won't track your information when you visit our site. But in order to comply with your preferences, we'll have to use just one tiny cookie so that you're not asked to make this choice again.\n              \n                \n                \n                \n    Accept\n  \n                Decline\n                \n              \n            \n          \n    \n    \n\n\n\n\n    <iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WCKQG9T\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>\n\n\n    \n    \n\n\n\n\n\n\n  \n\n\n\n  \n    \n  \n  \n  \n  \n\n\n\n    \n    \n      \n        \n      \n    \n\n    \n    \n\n  \n    \n      \n    \n  \n  \n    \n    \n    \n      \n        \n          \n            Overview\n          \n          \n            \n              \n              \n                \n                  \n\n                  What is Haystack?\n                \n              \n            \n              \n              \n                \n                  \n\n                  Quick Start\n                \n              \n            \n              \n              \n                \n                  \n\n                  Use Cases\n                \n              \n            \n              \n              \n                \n                  \n\n                  Demo\n                \n              \n            \n              \n              \n                \n                  \n\n                  Roadmap\n                \n              \n            \n          \n        \n      \n    \n    \n      \n      \n        \n          \n            \n            \n            Documentation\n          \n        \n      \n    \n    \n      \n      \n        \n          \n            \n            \n            Tutorials\n          \n        \n      \n    \n    \n      \n      \n        \n          \n            \n            \n            Integrations\n          \n        \n      \n    \n    \n      \n      \n        \n          \n            \n            \n            Blog\n          \n        \n      \n    \n    \n      \n      \n        \n          \n            \n            \n            Community\n          \n        \n      \n    \n    \n      \n        \n          \n            Resources\n          \n          \n            \n              \n              \n                \n                  \n                    New\n                  \n\n                  PromptHub\n                \n              \n            \n              \n              \n                \n                  \n\n                  deepset Blog\n                \n              \n            \n              \n              \n                \n                  \n\n                  Benchmarks\n                \n              \n            \n              \n              \n                \n                  \n\n                  NLP Resources\n                \n              \n            \n          \n        \n      \n    \n\n    \n    \n  \n    \n      \n        \n      \n      \n      \n        Get Started\n      \n      \n        \n      \n    \n  \n\n\n\n\n\n  \n\n\n    \n\n  \n    \n    \n      \n      \n        \n          \n\n          \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n\n          \n            Overview\n          \n\n          \n            \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      \n\n                      What is Haystack?\n                    \n                  \n                \n              \n            \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      \n\n                      Quick Start\n                    \n                  \n                \n              \n            \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      \n\n                      Use Cases\n                    \n                  \n                \n              \n            \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      \n\n                      Demo\n                    \n                  \n                \n              \n            \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      \n\n                      Roadmap\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n      \n      \n        \n        \n          \n            \n            \n            Documentation\n        \n      \n    \n      \n      \n        \n        \n          \n            \n            \n            Tutorials\n        \n      \n    \n      \n      \n        \n        \n          \n            \n            \n            Integrations\n        \n      \n    \n      \n      \n        \n        \n          \n            \n            \n            Blog\n        \n      \n    \n      \n      \n        \n        \n          \n            \n            \n            Community\n        \n      \n    \n      \n      \n        \n          \n            New\n          \n\n          \n          \n            \n          \n            \n          \n            \n          \n            \n          \n\n          \n            Resources\n          \n\n          \n            \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      \n                        New\n                      \n\n                      PromptHub\n                    \n                  \n                \n              \n            \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      \n\n                      deepset Blog\n                    \n                  \n                \n              \n            \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      \n\n                      Benchmarks\n                    \n                  \n                \n              \n            \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      \n\n                      NLP Resources\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n\n    \n    \n  \n    \n      \n        \n      \n      \n      \n        Get Started\n      \n      \n        \n      \n    \n  \n\n\n\n\n  \n\n\n\n  \n\n\n\n    \n    \n      \n    \n        \ud83c\udf83 We're participating in Hacktoberfest 2023!\n        \n            \n        \n      \n        \n    \n\n    \n\n    \n    \n  \n    \n    \n\n  \n    \n      \n        \n        Tutorials\n        Whether you\u2019re a beginner or an experienced user, these tutorials will walk you through Haystack features and functionalities making it easy for you to understand and implement them.\n      \n    \n\n    \n        \n    \n    \n        \n    \n    Contribute\n\n    \n  \n\n\n\n    \n      \n        \n          \n          25 tutorials for all levels\n\n          \n          \n            \n              \n              \n                Search tutorials\n                \n                  \n                    \n                  \n                \n              \n\n              \n              \n                \n                  All levels\n                  Beginner\n                  Intermediate\n                  Advanced\n                \n              \n\n              \n              \n\n              \n              \n                Reset filters\n              \n            \n\n            \n              \n              \n                Sort By:\n                \n                  \n                    Level\n                    Last Updated\n                    Newest\n                  \n                \n              \n            \n\n            \n              Reset filters\n            \n          \n\n          \n          \n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            advanced\n        \n\n        \n        \n            \n                \n                    \n                        \n                        \n                    \n                \n                \n                15 min\n            \n        \n\n        \n        \n            Featured\n        \n    \n\n    \n    Customizing Agent to Chat with Your Documents\n\n    \n    Advanced Customizations for Agents with Memory\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            beginner\n        \n\n        \n        \n            \n                \n                    \n                        \n                        \n                    \n                \n                \n                15 min\n            \n        \n\n        \n        \n    \n\n    \n    Build Your First Question Answering System\n\n    \n    Get Started by creating a Retriever Reader pipeline.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            beginner\n        \n\n        \n        \n            \n                \n                    \n                        \n                        \n                    \n                \n                \n                20 min\n            \n        \n\n        \n        \n    \n\n    \n    Build a Scalable Question Answering System\n\n    \n    Create a scalable Retriever Reader pipeline that uses an ElasticsearchDocumentStore.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            beginner\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Utilizing Existing FAQs for Question Answering\n\n    \n    Create a smarter way to answer new questions using your existing FAQ documents.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            beginner\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Preprocessing Your Documents\n\n    \n    Start converting, cleaning, and splitting Documents using Haystack\u2019s preprocessing capabilities.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            beginner\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    How to Use Pipelines\n\n    \n    Learn about the many ways which you can route queries through the nodes in a pipeline.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            intermediate\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Fine-Tuning a Model on Your Own Data\n\n    \n    Improve the performance of your Reader by performing fine-tuning.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            intermediate\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Better Retrieval with Embedding Retrieval\n\n    \n    Use Transformer based dense Retrievers to improve your system\u2019s performance.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            intermediate\n        \n\n        \n        \n            \n                \n                    \n                        \n                        \n                    \n                \n                \n                20 min\n            \n        \n\n        \n        \n    \n\n    \n    Customizing PromptNode for NLP Tasks\n\n    \n    Use PromptNode and PromptTemplate for your custom NLP tasks\n\n    \n    \n\n        \n        \n            \n                \n                    Outdated\n                \n            \n        \n\n        \n        \n            \n                \n            \n            intermediate\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Generative QA with RAGenerator\n\n    \n    Try out a generative model in place of the extractive Reader.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            intermediate\n        \n\n        \n        \n            \n                \n                    \n                        \n                        \n                    \n                \n                \n                15 min\n            \n        \n\n        \n        \n    \n\n    \n    Creating a Generative QA Pipeline with Retrieval-Augmentation\n\n    \n    Use a large language model in your search system through PromptNode\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            intermediate\n        \n\n        \n        \n            \n                \n                    \n                        \n                        \n                    \n                \n                \n                10 min\n            \n        \n\n        \n        \n    \n\n    \n    Answering Multihop Questions with Agents\n\n    \n    Use Agent to answer multihop questions with extractive models\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            intermediate\n        \n\n        \n        \n            \n                \n                    \n                        \n                        \n                    \n                \n                \n                10 min\n            \n        \n\n        \n        \n    \n\n    \n    Building a Conversational Chat App\n\n    \n    Use ConversationalAgent to build a human-like chat application\n\n    \n    \n\n        \n        \n            \n                \n                    Outdated\n                \n            \n        \n\n        \n        \n            \n                \n            \n            intermediate\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Generative QA with Seq2SeqGenerator\n\n    \n    Try out a generative model in place of the extractive Reader.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            intermediate\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Question Generation\n\n    \n    Generate a set of questions that can be answered by a given Document.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            intermediate\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Query Classifier\n\n    \n    Classify incoming queries so that they can be routed to the nodes that are best at handling them.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            intermediate\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Document Classification at Index Time\n\n    \n    Generate and attach classification labels to your Documents when indexing.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            intermediate\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Make Your QA Pipelines Talk!\n\n    \n    Convert text Answers into speech.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            intermediate\n        \n\n        \n        \n            \n                \n                    \n                        \n                        \n                    \n                \n                \n                20 min\n            \n        \n\n        \n        \n    \n\n    \n    Text-To-Image Search Pipeline with Multimodal Retriever\n\n    \n    Use a MultiModalRetriever to build a cross-modal search pipeline.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            advanced\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Evaluation of a QA System\n\n    \n    Learn how to evaluate the performance of individual nodes as well as entire pipelines.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            advanced\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Training Your Own Dense Passage Retrieval Model\n\n    \n    Learn about training a Dense Passage Retrieval model and the data needed to do so.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            advanced\n        \n\n        \n        \n            \n                \n                    \n                        \n                        \n                    \n                \n                \n                30 min\n            \n        \n\n        \n        \n    \n\n    \n    Using Haystack with REST API\n\n    \n    Create a production-ready pipeline and interact with Haystack REST API.\n\n    \n    \n\n        \n        \n            \n                \n                    Outdated\n                \n            \n        \n\n        \n        \n            \n                \n            \n            advanced\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Question Answering on a Knowledge Graph\n\n    \n    Experiment with a question answering system that draws upon knowledge graph.h\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            advanced\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Open-Domain QA on Tables\n\n    \n    Perform question answering on tabular data.\n\n    \n    \n\n        \n        \n            \n        \n\n        \n        \n            \n                \n            \n            advanced\n        \n\n        \n        \n\n        \n        \n    \n\n    \n    Generative Pseudo Labeling for Domain Adaptation\n\n    \n    Use a Retriever and a query generator to perform unsupervised domain adaptation.\n\n\n          \n          \n            \n              Want to contribute on GitHub?\n              \n                We maintain these tutorials in an open source repository on GitHub. If you\u2019d like to contribute, go to the repository to submit your edits or suggest a new tutorial.\n              \n            \n\n            \n            \n              \n    \n    \n        \n    \n    Contribute\n\n            \n          \n        \n      \n    \n    \n  \n    \n    \n      \n      \n        \n        \n          \n            \n          \n        \n      \n\n      \n      \n        \n          \n        \n      \n    \n\n    \n    \n      \n      \n        \n          \n            \n          \n\n          Looking for a tutorial?\n          \n            Type a keyword then click the \"Search\" button and we'll search\n            through all tutorials.\n          \n        \n\n        \n        \n          \n            \n            \n          \n\n          No results found\n          \n            You may want to try different keywords or check for any possible\n            typos.\n          \n        \n\n        \n        \n          \n            \n            \n          \n\n          There has been an error.\n          \n            Please try again later.\n          \n        \n\n        \n        \n          \n\n  \n    \n  \n\n\n          Searching..\n        \n      \n\n      \n\n      \n    \n\n    \n    \n      Powered by\n      .cls-1{fill:#03af9d;}.cls-2{fill:#fff;}\n    \n  \n\n\n  \n\n  \n    \n    const tutorialCards = Array.from(\n      document.querySelectorAll(\".grid-page-card\")\n    );\n\n    const filterAndSort = () => {\n      let tutorials = [...tutorialCards]\n      \n      const selectedLevel = document.querySelector(\"#level-select\").value;\n      const selectedSort = document.querySelector(\"#sort-select\").value;\n      \n\n      \n      if (selectedLevel !== \"all\") {\n        tutorials = tutorials.filter(t => t.dataset.level === selectedLevel)\n      }\n\n      \n      \n\n      \n      if (selectedSort === \"created\" || selectedSort === \"updated\") {\n        tutorials = tutorials.sort((a, b) => {\n          const aFeatured = a.dataset.featured ? 1 : -1;\n          const bFeatured = b.dataset.featured ? 1 : -1;\n          if (aFeatured !== bFeatured) {\n            return bFeatured - aFeatured;\n          }\n\n          const aDate = new Date(a.dataset[selectedSort]);\n          const bDate = new Date(b.dataset[selectedSort]);\n          return bDate - aDate;\n        });\n      }\n\n\n      \n      document.querySelector(\".section-title\").innerHTML = `${tutorials.length} tutorials for <span>${selectedLevel}</span> level${selectedLevel===\"all\" ? \"s\":\"\"}`\n\n      document.querySelector(\".grid-page-grid\").innerHTML = \"\"\n      tutorials.forEach((e) =>\n        document.querySelector(\".grid-page-grid\").appendChild(e)\n      );\n    }\n\n    const resetFilters = () => {\n      document.querySelector(\"#level-select\").value = \"all\";\n      document.querySelector(\"#sort-select\").value = \"level\";\n      \n      filterAndSort();\n    }\n    \n    \n    const searchModalContainer = document.querySelector(\".search-modal-container\");\n    const searchModal = document.querySelector(\".search-modal\");\n    const searchModalInput = document.querySelector(\"#modal-search\");\n    const searchModalCards = document.querySelector(\".search-modal-cards\");\n    \n    \n    const openModal = () => {\n      searchModalContainer.classList.add(\"is-active\");\n\n      const body = document.querySelector(\"body\");\n      const scrollbarWidth = window.innerWidth - body.clientWidth;\n      body.style.overflow = \"hidden\";\n\n      if (window.innerWidth > 576){\n        body.style.paddingRight = scrollbarWidth + \"px\";\n        searchModalContainer.style.paddingRight = scrollbarWidth + \"px\";\n      }\n\n      searchModalInput.focus();\n    };\n\n    \n    const closeModal = () => {\n      searchModalContainer.classList.remove(\"is-active\");\n      \n      const body = document.querySelector(\"body\");\n      body.style.overflow = \"auto\";\n      body.style.paddingRight = 0;\n      searchModalContainer.style.paddingRight = 0;\n\n      setTimeout(() => {\n        searchModalInput.value = \"\"\n        searchModal.classList.remove(\"not-found\", \"loading\")\n        searchModal.classList.add(\"default\")\n        searchModalCards.innerHTML = \"\"\n      }, 200)\n\n    };\n\n    \n    document.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 27) {\n        closeModal();\n      }\n    });\n\n    \n    searchModalContainer.addEventListener(\"click\", (e) => {\n      if (e.target === searchModalContainer) {\n        closeModal();\n      }\n    });\n\n    \n    const searchTutorials = async () => {\n      const query = searchModalInput.value\n      \n      if (!query) return\n      searchModal.classList.remove(\"default\", \"not-found\", \"error\")\n      searchModalCards.innerHTML = \"\"\n      searchModal.classList.add(\"loading\")\n\n      try {\n        const response = await fetch(`/api/tutorial-search?query=${query}`);\n\n        if (response.status === 200) {\n          const result = await response.json();\n          const documents = result.results[0].documents.filter(doc => doc.score > 0.01); \n\n          if (documents.length > 0) {\n            \n            documents.forEach((doc) => {\n              const card = document.createElement(\"a\");\n              card.classList.add(\"search-modal-card\");\n              const headline = doc.meta.headlines[0]?.headline;\n              card.href = `/tutorials/${doc.meta.file_name.toLowerCase().replace(\".txt\", \"\")}${headline ? `#${headline.toLowerCase().trim().replace(/ /g, \"-\").replace(/[.,'\\/!$%\\^&\\*;:{}=()]/g, \"\")}` : \"\" }`;\n              card.innerHTML = `\n              <svg\n              width=\"32\"\n              height=\"32\"\n              viewBox=\"0 0 32 32\"\n              fill=\"none\"\n                >\n                  <g clip-path=\"url(#clip0_827_12412)\">\n                    <rect width=\"32\" height=\"32\" fill=\"#A0A0C0\" />\n                    <path\n                      d=\"M23.3125 9.83008H19.2906C18.4275 9.83008 17.5838 10.0779 16.8578 10.5455L16 11.0957L15.1422 10.5455C14.4169 10.078 13.5722 9.82962 12.7094 9.83008H8.6875C8.37637 9.83008 8.125 10.0814 8.125 10.3926V20.377C8.125 20.6881 8.37637 20.9395 8.6875 20.9395H12.7094C13.5725 20.9395 14.4162 21.1873 15.1422 21.6549L15.9227 22.1576C15.9455 22.1717 15.9719 22.1805 15.9982 22.1805C16.0246 22.1805 16.051 22.1734 16.0738 22.1576L16.8543 21.6549C17.582 21.1873 18.4275 20.9395 19.2906 20.9395H23.3125C23.6236 20.9395 23.875 20.6881 23.875 20.377V10.3926C23.875 10.0814 23.6236 9.83008 23.3125 9.83008ZM12.7094 19.6738H9.39062V11.0957H12.7094C13.3316 11.0957 13.9363 11.2732 14.4584 11.609L15.3162 12.1592L15.4375 12.2383V20.3594C14.6008 19.9094 13.6656 19.6738 12.7094 19.6738ZM22.6094 19.6738H19.2906C18.3344 19.6738 17.3992 19.9094 16.5625 20.3594V12.2383L16.6838 12.1592L17.5416 11.609C18.0637 11.2732 18.6684 11.0957 19.2906 11.0957H22.6094V19.6738ZM13.9768 13.3457H10.7107C10.6422 13.3457 10.5859 13.4055 10.5859 13.4775V14.2686C10.5859 14.3406 10.6422 14.4004 10.7107 14.4004H13.975C14.0436 14.4004 14.0998 14.3406 14.0998 14.2686V13.4775C14.1016 13.4055 14.0453 13.3457 13.9768 13.3457ZM17.8984 13.4775V14.2686C17.8984 14.3406 17.9547 14.4004 18.0232 14.4004H21.2875C21.3561 14.4004 21.4123 14.3406 21.4123 14.2686V13.4775C21.4123 13.4055 21.3561 13.3457 21.2875 13.3457H18.0232C17.9547 13.3457 17.8984 13.4055 17.8984 13.4775ZM13.9768 15.8066H10.7107C10.6422 15.8066 10.5859 15.8664 10.5859 15.9385V16.7295C10.5859 16.8016 10.6422 16.8613 10.7107 16.8613H13.975C14.0436 16.8613 14.0998 16.8016 14.0998 16.7295V15.9385C14.1016 15.8664 14.0453 15.8066 13.9768 15.8066ZM21.2893 15.8066H18.0232C17.9547 15.8066 17.8984 15.8664 17.8984 15.9385V16.7295C17.8984 16.8016 17.9547 16.8613 18.0232 16.8613H21.2875C21.3561 16.8613 21.4123 16.8016 21.4123 16.7295V15.9385C21.4141 15.8664 21.3578 15.8066 21.2893 15.8066Z\"\n                      fill=\"white\"\n                    />\n                  </g>\n                  <defs>\n                    <clipPath id=\"clip0_827_12412\">\n                      <rect width=\"32\" height=\"32\" rx=\"16\" fill=\"white\" />\n                    </clipPath>\n                  </defs>\n                </svg>\n    \n                <div>\n                  <h3>${doc.meta.title}</h3>\n                  <p>${doc.content}</p>\n    \n                  <div class=\"card-tags\">\n                    <div>\n                      <span class=\"icon\">\n                        <svg\n                          width=\"10\"\n                          height=\"11\"\n                          viewBox=\"0 0 10 11\"\n                          fill=\"none\"\n                        >\n                          <path\n                            d=\"M9.64185 4.13731L6.66646 3.70489L5.33638 1.0084C5.30005 0.934575 5.24029 0.874809 5.16646 0.838481C4.9813 0.747075 4.7563 0.823247 4.66372 1.0084L3.33365 3.70489L0.358256 4.13731C0.276224 4.14903 0.201224 4.1877 0.143802 4.24629C0.0743826 4.31764 0.0361291 4.41364 0.0374475 4.51318C0.038766 4.61272 0.0795484 4.70767 0.150834 4.77715L2.30357 6.87598L1.79497 9.83965C1.78305 9.90859 1.79068 9.9795 1.817 10.0443C1.84332 10.1092 1.88727 10.1653 1.94388 10.2064C2.00049 10.2475 2.06749 10.272 2.13728 10.2769C2.20707 10.2819 2.27685 10.2672 2.33872 10.2346L5.00005 8.83536L7.66138 10.2346C7.73404 10.2732 7.81841 10.2861 7.89927 10.2721C8.10318 10.2369 8.24029 10.0436 8.20513 9.83965L7.69654 6.87598L9.84927 4.77715C9.90787 4.71973 9.94654 4.64473 9.95826 4.5627C9.9899 4.35762 9.84693 4.16778 9.64185 4.13731ZM6.79068 6.58067L7.21373 9.04512L5.00005 7.88262L2.78638 9.04629L3.20943 6.58184L1.4188 4.83575L3.8938 4.47598L5.00005 2.23418L6.1063 4.47598L8.5813 4.83575L6.79068 6.58067Z\"\n                            fill=\"#2B2F55\"\n                          />\n                        </svg>\n                      </span>\n                      <span>${doc.meta.level}</span>\n                    </div>\n    \n                    ${doc.meta.completion_time && `<div>\n                      <span class=\"icon\">\n                        <svg\n                          width=\"12\"\n                          height=\"12\"\n                          viewBox=\"0 0 12 12\"\n                          fill=\"none\"\n                        >\n                          <path\n                            d=\"M6 0.75C3.10078 0.75 0.75 3.10078 0.75 6C0.75 8.89922 3.10078 11.25 6 11.25C8.89922 11.25 11.25 8.89922 11.25 6C11.25 3.10078 8.89922 0.75 6 0.75ZM6 10.3594C3.59297 10.3594 1.64062 8.40703 1.64062 6C1.64062 3.59297 3.59297 1.64062 6 1.64062C8.40703 1.64062 10.3594 3.59297 10.3594 6C10.3594 8.40703 8.40703 10.3594 6 10.3594Z\"\n                            fill=\"#2B2F55\"\n                          />\n                          <path\n                            d=\"M8.04726 7.48358L6.37617 6.27538V3.375C6.37617 3.32344 6.33398 3.28125 6.28242 3.28125H5.71875C5.66719 3.28125 5.625 3.32344 5.625 3.375V6.60233C5.625 6.6328 5.63906 6.66093 5.66367 6.67851L7.60195 8.09178C7.64413 8.12225 7.70273 8.11288 7.7332 8.07186L8.06835 7.61483C8.09882 7.57147 8.08945 7.51288 8.04726 7.48358Z\"\n                            fill=\"#2B2F55\"\n                          />\n                        </svg>\n                      </span>\n    \n                      <span>${doc.meta.completion_time}</span>\n                    </div>`}\n                  </div>\n                </div>\n              `\n    \n              searchModalCards.appendChild(card)\n            })\n\n            searchModal.classList.remove(\"loading\")\n          } else {\n            searchModal.classList.remove(\"loading\")\n            searchModal.classList.add(\"not-found\")\n          }\n\n        } else {\n          \n          searchModal.classList.remove(\"loading\")\n          searchModal.classList.add(\"error\")\n        }\n      } catch (error) {\n        \n        searchModal.classList.remove(\"loading\")\n        searchModal.classList.add(\"error\")\n      }\n\n    }\n\n    searchModalInput.onkeydown = (e) => {\n      if (e.keyCode == 13) {\n        searchTutorials()\n      }\n    }\n\n    function sleep(ms) {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    \n    addEventListener('pageshow', () => {\n      resetFilters();\n      searchModalInput.value = \"\"\n    });\n  \n\nvar config={cookieless:!1};!function(b,e,a,f,c,d){b[a]=b[a]||function(){(b[a].q=b[a].q||[]).push(arguments)};b[a].l=1*new Date;c=e.createElement(f);c.async=!0;d=e.getElementsByTagName(f)[0];c.src=\"https://serve.nrich.ai/tracker/assets/tracker.js?nto\\x3d\"+a;d.parentNode.insertBefore(c,d)}(window,document,\"nt\",\"script\");nt(\"load\",\"ee21216a-7b9b-4e72-afbe-5fb9c0448bcd\",config);\n\n    \n    \n\n\n\n\n\n\n\n\n\n  \n\n\n\n  \n    \n      \n      \n        \n          \n          \n            Community\n            \n              GitHub Discussions\n            \n\n            \n              Discord\n            \n            \n              Hugging Face\n            \n            \n              Open NLP Meetup\n            \n          \n\n          \n          \n            Resources\n            \n              Models\n            \n            \n              Datasets\n            \n          \n\n          \n          \n            Company\n            \n              About\n            \n            \n              Jobs\n            \n          \n        \n\n        \n          \n            \n              \n              \n            \n          \n\n          Sign up for community updates\n\n          \n            \n            \n\n\n  \n    \n      \n        \n      \n      \n        Submit\n      \n      \n        \n      \n    \n  \n\n\n            Thanks! You'll soon receive a confirmation email \ud83d\udce7\n          \n          By submitting my email, I agree to allow deepset to store and process my personal data.\n        \n      \n\n      \n      \n        \n        \n          \n            \n            \n          \n        \n\n        \n        \n          Building a semantic layer for the modern tech stack \u2014 driven by the\n          latest NLP and open source.\n        \n\n        \n        \n          \n          \n            \n              \n                \n              \n            \n          \n\n          \n          \n            \n                \n              \n            \n          \n\n          \n          \n            \n                \n              \n            \n          \n\n          \n          \n            \n                \n              \n            \n          \n\n          \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n        \n\n        \n        \n          \n            Privacy\n          \n\n          \n            Imprint\n          \n        \n\n        \u00a9 2023 deepset GmbH. All rights reserved.\n      \n    \n  \n\n\n\n\n\n\n\n\n  \n  \n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n  \n  \n  \n  \n  \n  \n  \n\n", "content_type": "text", "score": null, "meta": {"url": "https://haystack.deepset.ai/tutorials"}, "id_hash_keys": ["content"], "embedding": null, "id": "3e9ee2228392a6afc84fae944287a199"}